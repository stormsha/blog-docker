version: "3"
services:
  db:
    restart: always
    image: ${MYSQL_IMAGE}
    container_name: blog_db
    volumes:
      - ./db/mysql:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf:ro
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
     - "9100:3306"
    networks:
      - backend

  redis:
    restart: always
    image: ${REDIS_IMAGE}
    container_name: blog_redis
     volumes:
      - ./redis/redis.cnf:/etc/redis.conf
      - ./redis/data:/data
    networks:
      - backend

  web:
    restart: always
    image: blog:v1
    container_name: blog_web
    environment:
      BLOG_MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      BLOG_MYSQL_HOST: db
      BLOG_MYSQL_NAME: ${BLOG_MYSQL_NAME}
      BLOG_MYSQL_USER: root
      BLOG_MYSQL_PORT: 9100
      BLOG_REDIS_HOST: redis
      BLOG_REDIS_PORT: 6379
    env_file:
      - ./web/blog/blog.env
    command: apk add vim && gunicorn blog.wsgi -b 0.0.0.0:8000
    volumes:
      - ./web/blog:/opt/app/blog/
    links:
      - db
      - redis
    depends_on:
      - db
      - redis
    networks:
      - backend
      - frontend
    ports:
     - "9000:8000"

  nginx:
    restart: always
    image: ${NGINX_IMAGE}
    container_name: blog_nginx
    volumes:
      - ./web/blog/static:/opt/app/blog/static:ro
      - ./web/blog/media:/opt/app/blog/media:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl_cert:/etc/nginx/ssl_cert:ro
      - ./nginx/log:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    links:
      - web
    networks:
      - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
